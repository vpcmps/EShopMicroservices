<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">Basket/Basket.API/Basket.API.csproj</projectFile>
    <projectFile profileName="https">Basket/Basket.API/Basket.API.csproj</projectFile>
    <projectFile kind="Docker">Services/Catalog/Catalog.API/Catalog.API.csproj</projectFile>
    <projectFile profileName="http">Services/Catalog/Catalog.API/Catalog.API.csproj</projectFile>
    <projectFile profileName="https">Services/Catalog/Catalog.API/Catalog.API.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e6e51239-532e-45f9-a355-23337be4cc96" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Basket/DeleteBasket/DeleteBasketEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Basket/DeleteBasket/DeleteBasketHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Basket/GetBasket/GetBasketEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Basket/GetBasket/GetBasketHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Basket/StoreBasket/StoreBasketEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Basket/StoreBasket/StoreBasketHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/GlobalUsing.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Models/ShoppingCart.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Basket/Basket.API/Models/ShoppingCartItem.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Behaviors/LoggingBehavior.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Behaviors/ValidationBehavior.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/ICommand.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/ICommandHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/IQuery.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/IQueryHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/BadRequestException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/Handler/CustomExceptionHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/InternalServerException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/NotFoundException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Data/CatalogInitialData.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Exceptions/ProductNotFoundException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/GlobalUsing.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Models/Product.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/CreateProduct/CreateProductEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/CreateProduct/CreateProductHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/DeleteProduct/DeleteProductCommandHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/DeleteProduct/DeleteProductEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/GetProductById/GetProductByIdCommandHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/GetProductById/GetProductByIdEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/GetProducts/GetProductsEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/GetProducts/GetProductsHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/GetProductsByCategory/GetProductsByCategoryEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/GetProductsByCategory/GetProductsByCategoryQueryHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/UpdateProduct/UpdateProductEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Products/UpdateProduct/UpdateProductHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/compose.override.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.EShopMicroservices/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.EShopMicroservices/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.EShopMicroservices/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.EShopMicroservices/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EShopMicroservices.sln" beforeDir="false" afterPath="$PROJECT_DIR$/EShopMicroservices.sln" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2q7pXDo8zP5xERLNjEePGuiaPR6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.Catalog.API: https.executor": "Debug",
    "Docker.compose.yaml.catalog.db: Compose Deployment.executor": "Run",
    "Docker.compose.yaml: Compose Deployment.executor": "Debug",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Docker.compose.yaml: Compose Deployment">
    <configuration name="Basket.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Basket/Basket.API/Basket.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Basket.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Basket/Basket.API/Basket.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Catalog.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Services/Catalog/Catalog.API/Catalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Catalog.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Services/Catalog/Catalog.API/Catalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Basket.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="basket.api" />
          <option name="containerName" value="basket.api" />
          <option name="contextFolderPath" value="C:\Users\vpcam\RiderProjects\EShopMicroservices\src" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="Basket/Basket.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="Catalog.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="catalog.api" />
          <option name="contextFolderPath" value="C:\Users\vpcam\RiderProjects\EShopMicroservices\src" />
          <option name="sourceFilePath" value="Services/Catalog/Catalog.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="compose.yaml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="compose.yaml.catalog.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="catalog.db" />
            </list>
          </option>
          <option name="sourceFilePath" value="compose.yaml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.compose.yaml.catalog.db: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e6e51239-532e-45f9-a355-23337be4cc96" name="Changes" comment="" />
      <created>1734023507304</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1734023507304</updated>
      <workItem from="1734023509220" duration="11717000" />
      <workItem from="1734530593881" duration="1990000" />
      <workItem from="1735000810766" duration="9034000" />
      <workItem from="1735253078949" duration="175000" />
      <workItem from="1735253328156" duration="1987000" />
      <workItem from="1735266053667" duration="1760000" />
      <workItem from="1735430403886" duration="6872000" />
      <workItem from="1735824969772" duration="6887000" />
      <workItem from="1736433024172" duration="8513000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
</project>